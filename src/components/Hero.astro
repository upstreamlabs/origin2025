---
import Button from "components/Button.astro";

interface HeroLink {
  text: string;
  link: string;
  openInNewTab?: boolean;
}

interface HeroLogo {
  src: string;
  alt: string;
}

interface Props {
  title: string;
  tagline?: string;
  description?: string;
  date?: string;
  location?: string;
  backgroundImage?: string;
  backgroundAlt?: string;
  logosHeading?: string;
  logos?: HeroLogo[];
  highlights?: string[];
  links?: HeroLink[];
  mottoCn?: string;
  mottoEn?: string;
}

const {
  title,
  tagline,
  description,
  date,
  location,
  backgroundImage = "/images/homepage/spotlight-badge-ai-2025.webp",
  backgroundAlt = "Abstract flowing light pattern",
  logosHeading,
  logos,
  highlights,
  links,
  mottoCn,
  mottoEn,
} = Astro.props;

const splitTagline = tagline && tagline.includes('|') ? tagline.split('|') : undefined;
const fallbackCn = splitTagline ? splitTagline[0]?.trim() : tagline?.trim();
const fallbackEn = splitTagline && splitTagline[1] ? splitTagline[1].trim() : undefined;
const cnLine = (mottoCn ?? fallbackCn) || null;
const enLine = (mottoEn ?? fallbackEn) || null;
---

<section
  class="section section-home-header full-height"
  data-theme-section="dark"
  data-bg-section="header-home"
>
  <div class="overlay overlay-background overlay-background-image">
    {backgroundImage && (
      <img
        class="overlay"
        src={backgroundImage}
        alt={backgroundAlt}
        loading="eager"
      />
    )}
    <div class="overlay overlay-gradient-v2" />
  </div>

  <div class="container">
    <div class="row">
      <div class="col hero-column">
        <div class="hero-content-top">
          <div class="hero-title">
            <h1 class="display-title">{title}</h1>
          </div>

          {(cnLine || enLine) && (
            <div class={`hero-eyebrow ${cnLine && enLine ? 'multiline' : ''}`}>
              {cnLine && <span class="cn">{cnLine}</span>}
              {cnLine && enLine && <span class="separator">|</span>}
              {enLine && <span class="en">{enLine}</span>}
            </div>
          )}

          {description && <p class="hero-description">{description}</p>}

          {(date || location) && (
            <div class="event-facts">
              {date && <p>{date}</p>}
              {location && <p>{location}</p>}
            </div>
          )}

          {highlights?.length && (
            <ul class="hero-highlights">
              {highlights.map((item) => (
                <li>{item}</li>
              ))}
            </ul>
          )}

          {logos?.length && (
            <div class="organizer-block">
              {logosHeading && <p class="organizer-heading">{logosHeading}</p>}
              <div class="organizer-logos">
                {logos.map((logo) => (
                  <img src={logo.src} alt={logo.alt} class="org-logo" loading="lazy" />
                ))}
              </div>
            </div>
          )}
        </div>

        {links?.length && (
          <div class="btn-home-wrap">
            {links.map((loop) => (
              <Button
                text={loop.text}
                link={loop.link}
                openInNewTab={loop?.openInNewTab}
                class="btn light xl btn-hover fade-in-last"
              />
            ))}
          </div>
        )}
      </div>
    </div>
  </div>
</section>

<style>
  .hero-column {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    min-height: calc(100vh - 6rem);
    padding-top: clamp(4rem, 15vh, 10rem);
    align-items: center;
    position: relative;
  }

  .hero-content-top {
    width: 100%;
    max-width: 1000px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    margin: 0 auto;
  }

  .hero-eyebrow {
    font-size: 0.95rem;
    font-weight: 600;
    letter-spacing: 0.18em;
    text-transform: uppercase;
    color: rgba(255, 255, 255, 0.82);
    margin-bottom: 1.5rem;
  }

  .hero-eyebrow.multiline {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    letter-spacing: normal;
    text-transform: none;
    color: white;
    flex-wrap: wrap;
    justify-content: flex-start;
    margin-top: 1.5rem;
    margin-bottom: 0;
  }

  .hero-eyebrow.multiline .cn {
    font-size: clamp(0.95rem, 1.5vw, 1.15rem);
    font-weight: 400;
    letter-spacing: 0.03em;
    font-family: 'Zhuque Fangsong', 'Noto Serif SC', 'STSong', 'SimSun', serif;
    color: rgba(255, 255, 255, 0.85);
  }

  .hero-eyebrow.multiline .en {
    font-size: clamp(0.85rem, 1.3vw, 1rem);
    font-weight: 400;
    letter-spacing: 0.06em;
    text-transform: uppercase;
    font-family: 'IBM Plex Mono', 'JetBrains Mono', 'Inter', monospace;
    color: rgba(255, 255, 255, 0.85);
  }

  .hero-eyebrow.multiline .separator {
    font-size: clamp(0.9rem, 1.4vw, 1.05rem);
    font-weight: 300;
    color: rgba(255, 255, 255, 0.6);
  }

  .hero-title {
    margin-bottom: 0;
    text-align: left;
  }

  .display-title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 400;
    color: white;
    line-height: 1.05;
    margin: 0;
    white-space: nowrap;
    font-family: 'Zhuque Fangsong', serif;
  }

  .hero-description {
    font-size: 1.15rem;
    line-height: 1.6;
    color: rgba(255, 255, 255, 0.86);
    max-width: 640px;
    margin: 6rem 0 0;
    text-align: left;
    font-family: 'Zhuque Fangsong', serif;
  }

  .event-facts {
    display: flex;
    gap: 1.5rem;
    margin-top: 2.5rem;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  .event-facts p {
    margin: 0;
    font-size: 1rem;
    font-weight: 600;
    color: rgba(255, 255, 255, 0.9);
    letter-spacing: 0.06em;
    text-transform: uppercase;
  }

  .hero-highlights {
    list-style: none;
    padding: 0;
    margin: 1.5rem 0 0;
    display: grid;
    gap: 0.75rem;
    max-width: 700px;
  }

  .hero-highlights li {
    position: relative;
    padding-left: 1.75rem;
    font-size: 1.05rem;
    color: rgba(255, 255, 255, 0.88);
    line-height: 1.5;
    font-family: 'Zhuque Fangsong', serif;
  }

  .hero-highlights li::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0.55rem;
    width: 0.65rem;
    height: 0.65rem;
    border-radius: 50%;
    background: linear-gradient(135deg, #2b74ff, #ffc640);
  }

  .organizer-block {
    margin-top: 2rem;
    text-align: center;
  }

  .organizer-heading {
    font-size: 0.85rem;
    text-transform: uppercase;
    letter-spacing: 0.2em;
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 0.75rem;
  }

  .organizer-logos {
    display: flex;
    gap: 2rem;
    align-items: center;
    flex-wrap: wrap;
    justify-content: center;
  }

  .org-logo {
    height: 44px;
    width: auto;
    object-fit: contain;
  }

  .btn-home-wrap {
    position: absolute;
    bottom: 2.5rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
  }

  @media (max-width: 768px) {
    .hero-eyebrow {
      margin-bottom: 1rem;
    }

    .hero-eyebrow.multiline {
      gap: 0.4rem;
      margin-top: 1rem;
      margin-bottom: 0;
    }

    .hero-eyebrow.multiline .cn {
      font-size: clamp(0.85rem, 2.8vw, 1.05rem);
      letter-spacing: 0.02em;
    }

    .hero-eyebrow.multiline .en {
      font-size: clamp(0.75rem, 2.5vw, 0.95rem);
      letter-spacing: 0.05em;
    }

    .hero-eyebrow.multiline .separator {
      font-size: clamp(0.8rem, 2.6vw, 1rem);
    }

    .display-title {
      font-size: clamp(2rem, 8vw, 3rem);
      white-space: normal;
    }

    .hero-description {
      font-size: 1rem;
    }

    .organizer-logos {
      gap: 1.25rem;
    }

    .org-logo {
      height: 34px;
    }

    .hero-column {
      min-height: auto;
      padding-top: clamp(3rem, 12vh, 6rem);
    }
  }
</style>
